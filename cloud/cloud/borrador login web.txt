
// These two lines are required to initialize Express in Cloud Code.
var express = require('express');
var app = express();

// Global app configuration section
app.set('views', 'cloud/views');  // Specify the folder to find templates
app.set('view engine', 'ejs');    // Set the template engine
app.use(express.bodyParser());    // Middleware for reading request body

// This is an example of hooking up a request handler with a specific request
// path and HTTP verb using the Express routing API.
app.get('/gonzalo', function(req, res) {
  res.render('gonzalo', { salida: 'felicidades huraa comienzas a diseñar la interfaz web! y a realizar tu primera interfaz' });
});

// // Example reading from the request query string of an HTTP get request.
// app.get('/test', function(req, res) {
//   // GET http://example.parseapp.com/test?message=hello
//   res.send(req.query.message);
// });

// // Example reading from the request body of an HTTP post request.
// app.post('/test', function(req, res) {
//   // POST http://example.parseapp.com/test (with request body "message=hello")
//   res.send(req.body.message);
// });

// Attach the Express app to Cloud Code.
//funcion para la autenticacion o login del usuario
app.post('/logo', 
         express.basicAuth('YOUR_USERNAME', 'YOUR_PASSWORD'),
         function(req, res) {
  // Use Parse JavaScript SDK to create a new message and save it.
  var Message = Parse.Object.extend("Message");
  var message = new Message();
  message.save({ text: req.body.text }).then(function(message) {
    res.send('Success');
  }, function(error) {
    res.status(500);
    res.send('Error');
  });
});


//añadiendo mi primer metodo post
app.post('/logins', function(req, res) {
	Parse.User.logIn(req.body.usuario, req.body.password, {
		success: function(user) {
			res.render('logins', {salida: "hola amigo  "+ user.id});
		}
	});
	//res.set ( 'Content-Type' , 'application/json' );
	/*var gonzalo="como es gonzalocomo estas ahorra!!";
	var query=new Parse.Query("User");
	query.equalTo("username",req.body.usuario);
	//res.render('logins', {salida: "hola amigo  "+ req.body.usuario});
	query.find().then(function(usuarios) {
		//usuarios.[0].get
		if("sinka"==req.body.password){
			res.render('logins', {salida: "hola amigo  "+ usuarios[0].get("username")});
		}
		else{
			res.render('logins', {salida: "dato invalido"+usuarios[0].get("password")});
		}
      });
    
	//inicio de la funcion
	  //query.find().then(function(results) {
		
		/*	if(results[0].get("password")==req.body.password){
				res.render('logins', {salida: "Estas dentro del sistema :"+req.body.usuario});
			}
			else{
				res.render('logins', {salida: "introdusca un usuario y un password valido!!!"});
			}
		 */
		//res.render('comments/index', { comments: results });
		//res.json('hello', {salida: usuarios.get("username")});
		//res.json('hello', {otramas: usuarios.id,saludo:"gonzalo sinka fernandez"});
	 // },
	
	//
	/*query.find{(
		success:function(results){
			res.render('hello', {message: gonzalo});
		}
	)};*/
	//res.render('hello', {message: gonzalo});
	
	//realizando las pruebas de base de datos
	
	//
	//res.json('hello', {message: gonzalo});
	
});

app.listen();

///inicio
			var query=new Parse.Query("User");
			query.equalTo("objectId",user.id);
			query.find().then(function(results){
					var name=results[0].get("username");
					var estado=results[0].get("estado");
					var activo=results[0].get("activo");
					var iden=results[0].get("objectId");
					//var balance=results[0].get("balance");
					//salida de prueba
					
					//variables a usar en la tabla de logins
					if(estado==1){
						/*
						*introduciendo por defecto el dispositivo de la web
						*/
						var dispositivo="web";
						/*
						*fin introduciendo por defecto el dispositivo de la web
						*/
						var RegLogin = Parse.Object.extend("Login");
						var regLogin = new RegLogin();
						//cargando informacion en la clase Login
						regLogin.save({
							//estos son los campos que se llenan para el registro de los logins de los usuarios o clientes
							code_login: user.id,
							senderapp_login: dispositivo,
							status_login: true
						});
						//creandoo variables para la comunicacion
						var RegComunicacion=Parse.Object.extend("comunicacion");
						var regComunicacion=new RegComunicacion();
						/*regcomunicacion.set("nro_cel_operador_com",name);
						regcomunicacion.set("senderapp_com",dispositivo);
						regcomunicacion.save(null, {
							success: function(regcomunicacion) {
							//responce('nuevo objeto creado con el id: '+usuario.objectid);
								response.success("persona  "+regcomunicacion.id);
							}	*/	
								//hasta aqui
						regComunicacion.save({
							//campos a llenar el la comunicacion
							nro_cel_operador_com: name,
							senderapp_com: dispositivo
						},{
						success: function(regComunicacion)
						{
							/*
							*
							*procedimiento para designar el tipo de mensaje 
							*a responder al dispositivo en funcion de su balance
							
							//ejemplo de la conversion
query.find().then(function(usuarios) {
		//usuarios.[0].get
		if("sinka"==req.body.password){
			res.render('logins', {salida: "hola amigo  "+ usuarios[0].get("username")});
		}
		else{
			res.render('logins', {salida: "dato invalido"+usuarios[0].get("password")});
		}
      });
//
							*
							*/
							//var queryCuenta=new Parse.Query("Cuentas");
							//queryCuentas.equalTo("usuario",name);
							var queryCuentas=new Parse.Query("Cuentas");
							queryCuentas.equalTo("usuario",name);
							queryCuentas.find().then(function(results){
									var balance_cuentas=results[0].get("balance");
									//
									var code=0;
									if(balance_cuentas==0){
										code=4;
									}else{
										if(balance_cuentas<=50){
											code=3;
										}else{
											if(balance_cuentas<=100){
												code=2;
											}else{
												if(balance_cuentas<=150){
													code=1;
												}else{
													if(balance_cuentas>150){
														code=0;
													}
												}
											}
										}
									}
									/*
									*
									*Realizando una consulta a la clase "Menasaje"
									*para despachar un mesaje segun su codigo
									*
									*/
									var queryMensajes=new Parse.Query("Mensajes");
									queryMensajes.equalTo("codigo",code);
									queryMensajes.find().then(function(results){
											//var queryCuentas
											var sMensaje=results[0].get("mensaje");
											var sCode=results[0].get("codigo");
											var respuesta={"code":sCode,"Balances":balance_cuentas,"mensaje":sMensaje,"key":regComunicacion.id};
											//response.success(respuesta);
											res.render('logins', {salida: "hola amigo  "+ user.id});
										//}
									});	
									//
								//}
							});
							
						
							//
							/*var apellido="sinka";
							var respuesta={"Balance":balance,"key":regComunicacion.id};
							response.success(respuesta);*/
							//response.success("la salidaa "+name+".."+estado+"..."+regComunicacion.id);
						}
						});
						//response.success("la salidaa "+name+".."+estado+"..."+regComunicacion.id);
							//fin hasta aqui
						//});
					}
					else{
						//response.success("su cuenta no esta activa!");
					}
					//var query2=new Parse.Query()
					//var Comunica=Parse.Object.extend("comunicacion");
					//var comunicacion=new Comunica();
					//response.success("la salidaa "+name+".."+estado+"...");
			});


